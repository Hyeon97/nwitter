{"version":3,"sources":["fbase.js","components/Navigation.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Navigation","userObject","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","AuthForm","useState","email","setemail","password","setpassword","newAccount","setnewAccount","error","seterror","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweet","nweetObject","isOwner","editing","setediting","text","newNweet","setnewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setnweet","attachment","setattachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setnweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Profile","refreshUser","newDisplayName","setnewDisplayName","history","useHistory","updateProfile","signOut","push","AppRouter","isLoggenIn","maxWidth","width","margin","exact","path","App","init","setinit","setuserObject","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59734fec.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n//연동로그인 관련\r\nexport const firebaseInstance = firebase\r\n//앵간한거\r\nexport const authService = firebase.auth();\r\n//db관련\r\nexport const dbService = firebase.firestore()\r\n//참고 https://firebase.google.com/docs/reference/js/firebase.storage.Storage?authuser=0\r\nexport const storageService = firebase.storage()","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//CSS\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObject }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}><FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" /></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObject.displayName\r\n                                ? `${userObject.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React, { useState } from 'react'\r\nimport { authService } from '../fbase'\r\n\r\nconst AuthForm = () => {\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [newAccount, setnewAccount] = useState(true)\r\n    //에러처리\r\n    const [error, seterror] = useState(\"\")\r\n    const toggleAccount = () => setnewAccount((prev) => !prev)\r\n    const onChange = (e) => {\r\n        const { target: { name, value } } = e\r\n        if (name === \"email\") {\r\n            setemail(value)\r\n        }\r\n        else {\r\n            setpassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let data\r\n            if (newAccount) {//create \r\n                data = await authService.createUserWithEmailAndPassword(email, password)\r\n            } else {//log in\r\n                data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            seterror(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import React from \"react\"\r\nimport AuthForm from \"../components/AuthForm\"\r\nimport { authService, firebaseInstance } from \"../fbase\"\r\n\r\n//CSS\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n//function component라고 함\r\n//export default () => <span>Auth</span>\r\n\r\n//이런식으로 적으면 다른데서 사용할때 자동으로 import 가능\r\nconst Auth = () => {\r\n    const onSocialClick = async (e) => {\r\n        const { target: { name } } = e\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        }\r\n        else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        //참고 https://firebase.google.com/docs/reference/js/firebase.auth.Auth?authuser=0#signinwithpopup\r\n        await authService.signInWithPopup(provider)\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth","import React, { useState } from 'react'\r\nimport { dbService, storageService } from '../fbase'\r\n\r\n//CSS\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObject, isOwner }) => {\r\n\r\n    const [editing, setediting] = useState(false)//에딧 버튼상태 토글\r\n    const [newNweet, setnewNweet] = useState(nweetObject.text)\r\n\r\n    const onDeleteClick = async () => {//필요에 따라서 async await를 써도 됨(필수는 아님)\r\n        const ok = window.confirm(\"Are you sure Delete this Nweet?\")\r\n        //console.log(ok)\r\n        if (ok) {\r\n            //delete\r\n            //트윗(문자) 지우기\r\n            await dbService.doc(`nweets/${nweetObject.id}`).delete()\r\n            //해당트윗에 첨부된 사진 지우기(사진이 존재한다면)\r\n            await storageService.refFromURL(nweetObject.attachmentUrl).delete()\r\n        }\r\n    }\r\n    const toggleEditing = () => setediting((prev) => !prev)\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        //console.log(nweetObject, newNweet)\r\n        await dbService.doc(`nweets/${nweetObject.id}`).update({\r\n            text: newNweet,\r\n        })\r\n        setediting(false)\r\n\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const { target: { value } } = e\r\n        setnewNweet(value)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Update Nweet\"\r\n                        />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n          </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{nweetObject.text}</h4>\r\n                        {nweetObject.attachmentUrl && <img src={nweetObject.attachmentUrl} />}\r\n                        {\r\n                            isOwner &&\r\n                            (<div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>)\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Nweet\r\n","import React, { useState } from 'react'\r\nimport { dbService, storageService } from '../fbase'\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\n//CSS\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NweetFactory = ({ userObject }) => {\r\n\r\n    const [nweet, setnweet] = useState(\"\")\r\n    const [attachment, setattachment] = useState(\"\")\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        e.preventDefault()\r\n        let attachmentUrl = \"\"\r\n        if (attachment !== \"\") {\r\n            //참고 https://firebase.google.com/docs/reference/js/firebase.storage.Reference?authuser=0#child\r\n            //collection이랑 비슷하게 동작\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObject.uid}/${uuidv4()}`)\r\n            //참고 https://firebase.google.com/docs/reference/js/firebase.storage.Reference?authuser=0#putstring\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n        }\r\n        const nweetObject = {\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObject.uid,\r\n            attachmentUrl,\r\n        }\r\n        //참고 https://firebase.google.com/docs/reference/js/firebase.firestore.Firestore?authuser=0#collection\r\n        await dbService.collection(\"nweets\").add(nweetObject)\r\n        setnweet(\"\")\r\n        setattachment(\"\")\r\n    }\r\n    const onChange = (e) => {\r\n        // e.target.value 이거랑 같음 es6문법, event 안의 target안에 있는 value를 달라와 같은 말\r\n        const { target: { value } } = e\r\n        setnweet(value)\r\n    }\r\n\r\n\r\n    //미리보기 화면 사진 한장 만들기\r\n    const onFileChange = (e) => {\r\n        const { target: { files } } = e\r\n        const theFile = files[0]\r\n        const reader = new FileReader()\r\n        reader.onloadend = (finishedEvent) => {//이벤트 리스너\r\n            const { currentTarget: { result } } = finishedEvent\r\n            setattachment(result)\r\n            //console.log(finishedEvent)\r\n        }\r\n        reader.readAsDataURL(theFile)\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setattachment(\"\")\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n\r\n\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n\r\n\r\n            {attachment &&\r\n\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Nweet from \"../components/Nweet\"\r\nimport NweetFactory from \"../components/NweetFactory\"\r\nimport { dbService } from \"../fbase\"\r\n\r\n//function component라고 함\r\n//export default () => <span>Home</span>\r\n\r\n//이런식으로 적으면 다른데서 사용할때 자동으로 import 가능\r\nconst Home = ({ userObject }) => {//로그인한 유저의 정보를 props로 받아옴으로써 누가 로그인을 했는지 알 수 있음\r\n    //console.log(userObject)\r\n\r\n    const [nweets, setnweets] = useState([])\r\n\r\n    // 오래된 방법\r\n    // const getNweets = async () => {\r\n    //     //참고 https://firebase.google.com/docs/reference/js/firebase.firestore.CollectionReference?authuser=0#get\r\n    //     const dbnweets = await dbService.collection(\"nweets\").get()\r\n    //     dbnweets.forEach((document) => {\r\n    //         //일반적으로 set을 쓰면 값을 전달하지만\r\n    //         //함수를 전달할 때는 이러한 방법을 쓴다.\r\n    //         //함수를 전달하면 리액트는 이전값으로 접근을 가능하게 도와준다\r\n    //         //document.data()는 forEach를 돌리면서 가장 최근의 document값을 나타내고 ...prev는 바로 직전의 document값을 나타낸다\r\n    //         //setnweets((prev) => [document.data(), ...prev])\r\n    //         //이런식으로 객체를 만들어서 넣어주는 방법도 있다\r\n    //         //...document.data()는\r\n    //         const nweetObject = {\r\n    //             ...document.data(),//spread attribute 기능\r\n    //             id: document.id,\r\n    //         }\r\n    //         setnweets((prev) => [nweetObject, ...prev])\r\n    //     })\r\n    // }\r\n\r\n    //컴포넌트가 마운트 되었을때 동작\r\n    useEffect(() => {\r\n        //getNweets()\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {//이 방법이 re-render 되지 않기때문(속도가 상대적으로 더빠름)에 좀더 좋음\r\n            //console.log(snapshot.docs)\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setnweets(nweetArray)//모든 불러오기 작업이 끝난후 값 업데이트\r\n            //console.log(nweetArray)\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObject={userObject} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) =>\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObject={nweet}\r\n                        isOwner={nweet.creatorId === userObject.uid}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { authService } from \"../fbase\"\r\n\r\n//function component라고 함\r\n//export default () => <span>Profile</span>\r\n\r\n//이런식으로 적으면 다른데서 사용할때 자동으로 import 가능\r\nconst Profile = ({ refreshUser, userObject }) => {\r\n\r\n    const [newDisplayName, setnewDisplayName] = useState(userObject.displayName)\r\n\r\n    const history = useHistory() //usehistory 사용 참고 https://reactrouter.com/web/api/Hooks/usehistory\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    // const getMyNweets = async () => {\r\n    //     //기본적인 필터링 방법\r\n    //     const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\", \"==\", userObject.uid)\r\n    //         .orderBy(\"createAt\")//no sql이라 그냥 쓰면 오류발생 사용자가 직접 들어가서 설정해줘야함\r\n    //         .get()\r\n    //     console.log(nweets.docs.map(doc => doc.data()))\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     getMyNweets()\r\n    // }, [])\r\n    const onChange = (e) => {\r\n        const { target: { value } } = e\r\n        setnewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (userObject.displayName !== newDisplayName) {\r\n            //참고 https://firebase.google.com/docs/reference/js/firebase.User#updateprofile\r\n            //console.log(userObject.updateProfile)\r\n            await userObject.updateProfile({//updateProfile사용시 firebase 쪽에 있는 user를 새로고침함\r\n                displayName: newDisplayName,\r\n            })\r\n            refreshUser()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Logout</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Profile","import React from \"react\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Navigation from \"./Navigation\"\r\n\r\nimport Auth from '../routes/Auth'\r\nimport Home from '../routes/Home'\r\nimport Profile from \"../routes/Profile\"\r\n\r\n\r\n\r\nconst AppRouter = ({ refreshUser, isLoggenIn, userObject }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggenIn && <Navigation userObject={userObject} />}\r\n            <Switch>\r\n                {\r\n                    isLoggenIn ? (\r\n                        <div style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}>\r\n                            <Route exact path=\"/\">\r\n                                <Home userObject={userObject} />\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObject={userObject} refreshUser={refreshUser} />\r\n                            </Route>\r\n                        </div>\r\n                    ) : (\r\n                            <>\r\n                                <Route exact path=\"/\">\r\n                                    <Auth />\r\n                                </Route>\r\n                            </>\r\n                        )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default AppRouter","import React, { useState, useEffect } from 'react'\nimport { authService } from \"../fbase\"\n\nimport AppRouter from './Router'\n\n\nfunction App() {\n  const [init, setinit] = useState(false)\n  //const [isLoggenIn, setisLoggenIn] = useState(false)//authService.currentUser >> 값이있으면 user를 없으면 null을 리턴\n  const [userObject, setuserObject] = useState(null)\n\n  useEffect(() => {\n\n    authService.onAuthStateChanged((user) => {//로그인하면 이 함수가 호출됨\n      if (user) {//만약 유저값이 바뀌면\n        //setisLoggenIn(true)\n        setuserObject(user)//바뀐유저값을 저장\n        //프로필 이름 바꿨을때 실시간으로 re-render하는 방법 1\n        setuserObject({//전체다 저장하지 않고 우리가 쓰는것만 따로 추려서 저장\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n        //프로필 이름 바꿨을때 실시간으로 re-render하는 방법 2 (비선호)\n        //setuserObject(user)\n      } else {\n        setuserObject(null)\n      }\n      setinit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n\n    const user = authService.currentUser\n    //프로필 이름 바꿨을때 실시간으로 re-render하는 방법 1\n    setuserObject({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n    //프로필 이름 바꿨을때 실시간으로 re-render하는 방법 2 (비선호)\n    //setuserObject(Object.assign({}, user))//{}는 빈 오브젝트\n  }\n\n  return (\n    <div>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggenIn={Boolean(userObject)} userObject={userObject} /> : \"Initializing....\"}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './components/App';\nimport \"./styles.css\";\nimport firebase from \"./fbase\"\n//import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}